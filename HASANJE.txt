;polje je oblika (x y)
(defun pojedi (polje)
  (progn (eatleft polje 1) (eatright polje 1) (eatup polje 1) (eatdown polje 1) (values))
)
  
(defun eatleft (polje smer)
  (cond
   ((and (equal smer 0) (equal trenutni (nth (car polje) (nth (cadr polje) global)))) '())
   ((and (equal smer 0)) (progn (setq (nth (car polje) (nth (cadr polje) global)) '-) (eatleft (list (1+ (car polje)) (cadr polje)) 0)))
   ((equal -1 (car polje)) '())
   ((equal '- (nth (1- (car polje)) (nth (cadr polje) global))) '())
   ((equal netrenutni (nth (1- (car polje)) (nth (cadr polje) global))) (eatleft (list (1- (car polje)) (cadr polje)) 1))
   ((equal trenutni (nth (1- (car polje)) (nth (cadr polje) global)))  (eatleft (list (1+ (car polje)) (cadr polje)) 0))
   
   
   )
  
  )