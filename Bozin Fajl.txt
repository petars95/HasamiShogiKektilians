(defun proceni_triv (tabla red kol)
  
  
  (let ((xvr (1+ red)) (yvr (- realn red)))
  (cond
  ((equalp red 7) 0)

  ((equal (nth kol (nth red tabla)) 'x) 
    (if (equal (1+ kol) realN)
        (+ (proceni_triv tabla (1+ red) 0) xvr)
        (+ (proceni_triv tabla red (1+ kol)) xvr) )
   )
 
  ((equal (nth kol (nth red tabla)) 'o)
    (if (equal (1+ kol) realN)
        (- (proceni_triv tabla (1+ red) 0) yvr)
        (- (proceni_triv tabla red (1+ kol)) yvr) )
   )

  ((equal (nth kol (nth red tabla)) '-)    
    (if (equal (1+ kol) realN)
        (+ 0 (proceni_triv tabla (1+ red) 0))
        (+ 0 (proceni_triv tabla red (1+ kol))) )
   )
   
   )
    )
  
  )

(defun proc (tabla)
  (proceni_triv tabla 2 0)
  )

(proc stanje)
